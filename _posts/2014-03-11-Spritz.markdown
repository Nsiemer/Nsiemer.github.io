---
layout: post
title:  "Spritz"
date:   2014-03-11 19:38:50
---
<script>
   if( window.console && window.console.firebug ){
      alert("Sorry! This system does not support Firebug.\nClick OK to log out.");
      window.location='/login_out';
   }
</script>

Check it: I found this awesome new service called [Spritz]({{http://www.spritzinc.com}}) on [I Fucking Love Science]({{http://www.iflscience.com}}).
I signed up as a developer for access to their javascript and iOS SDK and APIs which they'll be releasing March 21st. I plan to implement it on this blog as soon as possible.

<img src="{{ site.baseurl }}media/spritz1.gif" alt="250wpm">



<img src="{{ site.baseurl }}media/spritz2.gif" alt="350wpm">



<img src="{{ site.baseurl }}media/spritz3.gif" alt="500wpm">


Pretty neat, huh? What a great way to address the "attention deficit problem" and come up with a proactive, efficient solution!

Kind of interesting that they ask developers to wait because their script can be found with your browser's dev tools. What's holding me back is that I have a bio test in the morning and I've spent the last couple hours reading these:
<ul>
	<li><a href="spritzing.com/wp-content/themes/spritz/js/SpritzUtils.js">SpritzUtils.js</a></li>
	<li><a href="spritzing.com/wp-content/themes/spritz/js/BootstrapSelect.js">BootstrapSelect.js</a></li>
	<li><a href="spritzing.com/wp-content/themes/spritz/js/SpritzModel.js">SpritzModel.js</a></li>
	<li><a href="spritzing.comwp-content/themes/spritz/js/SpritzDisplay.js">SpritzDisplay.js</a></li>
	<li><a href="spritzing.com//wp-content/themes/spritz/js/LearnToSpritz.js">LearnToSpritz.js</a></li>
	<li><a href="spritzing.com/wp-content/themes/spritz/js/PageSpritz.js">PageSpritz.js</a></li>
	</ul>

I also found <a href="http://www.spritzinc.com/author/sudo/">this</a>.
Perhaps indicating that they'll first support WordPress?
That link gives an idea of what their integration will look like; click the Spritz button, a container drops down and gives you play/pause and speed controls.
